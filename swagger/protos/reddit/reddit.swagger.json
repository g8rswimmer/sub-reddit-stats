{
  "swagger": "2.0",
  "info": {
    "title": "protos/reddit/reddit.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "reddit.v1.RedditService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subreddit/{subreddit}/posts": {
      "get": {
        "summary": "GetSubredditAuthorPosts retrives the authors that have the most posts for a subreddit",
        "description": "# Responses:\n| HTTP Status | gRPC Code | Description |\n| --- | --- | --- |\n| 200 | `codes.OK` | subreddit author's posts |\n| 400 | `codes.InvalidArgument` | `subreddit` parameters is empty |\n| 500 | `codes.Internal` | service was unable to process the request do to an interanl error |",
        "operationId": "RedditService_GetSubredditAuthorPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSubredditAuthorPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subreddit",
            "description": "the subreddit name, which does not include the `/r`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "the limit of the response, optional",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "reddit.v1.RedditService"
        ]
      }
    },
    "/subreddit/{subreddit}/ups": {
      "get": {
        "summary": "GetSubredditMostUps retrives the subreddit posts that have the most ups (up votes)",
        "description": "# Responses:\n| HTTP Status | gRPC Code | Description |\n| --- | --- | --- |\n| 200 | `codes.OK` | subreddit posts with the most ups |\n| 400 | `codes.InvalidArgument` | `subreddit` parameters is empty |\n| 500 | `codes.Internal` | service was unable to process the request do to an interanl error |",
        "operationId": "RedditService_GetSubredditMostUps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSubredditMostUpsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subreddit",
            "description": "the subreddit name, which does not include the `/r`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "the limit of the response, optional",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "reddit.v1.RedditService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1GetSubredditAuthorPostsResponse": {
      "type": "object",
      "properties": {
        "author_posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubredditPost"
          },
          "title": "a list of authors with the number of post in the subreddit"
        }
      }
    },
    "v1GetSubredditMostUpsResponse": {
      "type": "object",
      "properties": {
        "subreddit_posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1SubredditData"
          },
          "title": "a list of subreddit posts that have the most up votes"
        }
      }
    },
    "v1SubredditData": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "the title of the subreddit post"
        },
        "downs": {
          "type": "integer",
          "format": "int32",
          "title": "number of down votes"
        },
        "upvote_ratio": {
          "type": "number",
          "format": "float",
          "title": "the upvote rator"
        },
        "ups": {
          "type": "integer",
          "format": "int32",
          "title": "number of up votes"
        },
        "total_awards_received": {
          "type": "integer",
          "format": "int32",
          "title": "total number of awards reeceived"
        },
        "name": {
          "type": "string",
          "title": "name of the subredit"
        },
        "subreddit": {
          "type": "string",
          "title": "subreddit name like funny"
        },
        "id": {
          "type": "string",
          "title": "id of the subreddit"
        },
        "author": {
          "type": "string",
          "title": "author username"
        },
        "author_fullname": {
          "type": "string",
          "title": "author id"
        }
      }
    },
    "v1SubredditPost": {
      "type": "object",
      "properties": {
        "author_fullname": {
          "type": "string",
          "title": "author id"
        },
        "author": {
          "type": "string",
          "title": "author username"
        },
        "posts": {
          "type": "integer",
          "format": "int32",
          "title": "number of posts"
        }
      }
    }
  }
}
